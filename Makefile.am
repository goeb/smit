# Manage configure options
AM_CPPFLAGS=-Wall
AM_CFLAGS=-Wall
AM_CXXFLAGS=-Wall
AM_LDFLAGS=

if GCOV_ENABLED
    AM_CFLAGS += -O0 -g3 -fprofile-arcs -ftest-coverage
    AM_CXXFLAGS += -O0 -g3 -fprofile-arcs -ftest-coverage
    AM_LDFLAGS += -lgcov
endif

if GPROF_ENABLED
    AM_CFLAGS += -O0 -g3 -pg -fprofile-arcs
    AM_CXXFLAGS += -O0 -g3 -pg -fprofile-arcs
    AM_LDFLAGS += -pg -lgcov
endif

if WINDOWS
    AM_CFLAGS += -static -static-libgcc
    AM_CFLAGS += -Dopenssl_EXPORTS
    
    AM_CXXFLAGS += -static -static-libgcc
    AM_CXXFLAGS += -Dopenssl_EXPORTS
else
    AM_LDFLAGS += -pthread
endif


# Main program
bin_PROGRAMS = smit
smit_SOURCES = \
	mongoose/mongoose.c \
	src/db.cpp  \
    src/parseConfig.cpp \
    src/identifiers.cpp \
    src/main.cpp \
    src/httpdHandlers.cpp \
    src/renderingText.cpp \
    src/renderingCsv.cpp \
    src/renderingHtml.cpp \
    src/cpio.cpp \
    src/stringTools.cpp \
    src/mutexTools.cpp \
    src/session.cpp \
    src/dateTools.cpp \
    src/logging.cpp \
    src/Trigger.cpp \
    src/filesystem.cpp

nodist_smit_SOURCES = embedcpio.c embedcpio.h 
BUILT_SOURCES = embedcpio.c embedcpio.h
CLEANFILES = embedcpio.c embedcpio.h
embedcpio.c embedcpio.h: convertToC embedded_data
	cd embedded_data && find * | cpio -o > ../embedcpio
	./convertToC embedcpio

.PHONY: embedded_data
embedded_data:
	cp -r @srcdir@/data $@
	echo "Version: @VERSION@" > $@/sm/version
	echo "Build: "`date "+%Y-%m-%d %H:%M:%S"` >> $@/sm/version
	which git && echo -n "Latest " >> $@/sm/version && git log -1 | head -1 >> $@/sm/version


smit_CPPFLAGS = -I @srcdir@/mongoose @OPENSSL_CFLAGS@
#smit_LDFLAGS = -pthread
smit_LDADD = @OPENSSL_LIBS@

if WINDOWS
else
    smit_LDADD += -ldl
endif


# specific subdirs
SUBDIRS = test

# data
dist_pkgdata_DATA = README.md LICENSE CHANGES

# Test sub-programs (will not be packaged)
smparser_SOURCES = src/parseConfig.cpp
smparser_CPPFLAGS = -DSM_PARSER
smparser_LDADD =

# Tools (will not be packaged)
convertToC_SOURCES = tools/convertToC.cpp

noinst_PROGRAMS = smparser convertToC

# Windows installer
if WINDOWS
all-local: @PACKAGE_TARNAME@-@VERSION@-setup$(EXEEXT)

@PACKAGE_TARNAME@-@VERSION@-setup$(EXEEXT): smit.iss smit$(EXEEXT)
	@STRIP@ smit$(EXEEXT)
	$(WINE) "@ISCC@" /q /dMyAppName=@PACKAGE_NAME@ /dMyAppVersion=@PACKAGE_VERSION@ /dMyAppExeName=smit$(EXEEXT) /f@PACKAGE_TARNAME@-@VERSION@-setup $<
endif

clean-local:
	rm -f @PACKAGE_TARNAME@-@VERSION@-setup$(EXEEXT)
	rm -f src/*.gcno src/*.gcda *.*.gcov

